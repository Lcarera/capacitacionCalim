package capacitacioncalim.personaje
import grails.converters.JSON
import capacitacioncalim.Auxiliar

class PersonajeController {

    def personajeService

    def imprimir(){
        println(personajeService.metodo())
        render 'aa'
    }

    def listJson() {
        def personajes = personajeService.listPersonajes()
        render personajes as JSON
    }

    def list() {
        // def personajes = personajeService.listLibros()
        def personajes = personajeService.metodo()
        println(personajeService.metodo())
        [personajes: personajes]
    }

    def create() {  
    }

    def save(PersonajeCommand command) {
        if (command.ano < 0) {
            flash.error = "El año del personaje no puede ser menor que 0!"
            render(view: "create", model: [personajeCommand: command])
        } else {
            try{
                personajeService.save(command)
                flash.message = "Personaje guardado correctamente"
                redirect(action: "list")
            }
            catch(AssertionError e) {
                Auxiliar.printearError e
                flash.error = e.message.split("finerror")[0]
                render (view: "create", model: [personajeCommand: command])
            }
            catch(Exception e){
                flash.error = "Error al guardar el personaje"
                Auxiliar.printearError e
                render (view: "create", model: [personajeCommand: command])
            }
        }
    }

    def edit(Long id) {
        def personajeCommand = personajeService.getPersonajeCommand(id)
        [personajeCommand: personajeCommand]
    }

    def update(PersonajeCommand command) {
    if (command.ano < 0) {
            flash.error = "El año del personaje no puede ser menor que 0!"
            render(view: "create", model: [personajeCommand: command])
        } else {
            try{
                personajeService.update(command)
                flash.message = "Personaje actualizado correctamente"
                redirect(action: "list")
            }
            catch(AssertionError e) {
                Auxiliar.printearError e
                flash.error = e.message.split("finerror")[0]
                render (view: "create", model: [personajeCommand: command])
            }
            catch(Exception e){
                flash.error = "Error al actualizar el personaje"
                Auxiliar.printearError e
                render (view: "create", model: [personajeCommand: command])
            }
        }
    }

    def delete(Long id) {
        personajeService.delete(id)
        redirect(action: "list")
    }

    def ajaxGetPersonajes() {
        def personajes = personajeService.listPersonajes()
        render personajes as JSON
    }

}